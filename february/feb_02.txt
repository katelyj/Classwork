2/2/17
Aim: Documentmenting your data

NoSQL: Any database that is not an SQL database
	- Graph databases
	- Document-based databases
	- File system databases

Document-Oriented Database
	- Records in Document Oriented Databases are stored as documents
	- Each document contains all the data that is associated with the given record, in key-value pairs (fields)
	- You do not need to specify the type of data put into each field
	- Fields can contain many different kinds of data, including lists and dictionaries
	- Documents that are meant to be stored together are put into collections
	- Documents in the same collection do not need to have the same fields
	- Each document has its own primary key, usually generated by mongo

mongod
	- Server process to run mongo
	
Working with pymongo
	- from pymongo import MongoClient
	- Connecting to a mongod server and database
		- server = MongoClient(<IP>)
			>>> from pymongo import MongoClient
			>>> server = MongoClient('149.89.150.100')
	- To access databases and collections, you can use either [] or .
		- db = server['mydb']
		- db = server.mybd
		- c = db['students'] #db.students
	- Databases and collections are not created until a document has been added to them
	- db.students.count() (or c.count()) 
		- counts number of documents in students database
	- To add a document:
		- Create a dictionary
		- Insert it into the collection
			- doc = { 'name' : 'bob', 'age' : 55 }
			- c.insert_one(doc)
