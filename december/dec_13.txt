12/13/16
Aim: Learning to write in script

Knock knock
Who's there?
Keyboard interrupt
Keyboa-
MOO!

javascript
	- Programming language originally designed to augment html and be run locally on a web browser
	- No direct relationship with java, though both have similar syntax
	- Dynamically typed -- variable types are provided at runtime (like python)
	- Most development will be done through a web browser's console
	- console.log()
		- equivalent to printf or system.out.print()
		- there is no built in i/o
		- will display a string to the console
		- less popular: alert("") --> brings up dialogue box with whatever you type
	- C-style syntax
		- curly braces, semicolons, if/elseif/else, while loops, for <counters>, i++, operators
	- Variable basics
		- declare with "var"
		- var x = 4;
		- var b = true;
		- var s = "hello";
		- var l = [4, 3, 19];
		- var o = { 'a' : 10, 'x' : 'hello' };

Document Object Model (DOM)
	- javascript derives most of its utility through being able to interact with html and xml documents
	- the DOM is an API for interacting with html
	- provides a structure that we can interact with and can be manipulated by functions
	- pages are represented as trees
	- selecting HTML elements
		- document.getElementByID(<ID>)
		- document.getElementsByTagName(<TAG>)
		- document.getElementsByClassName(<CLASS>)
	- manipulating DOM elements
		- .remove()
		- .innerHTML
		- .document.createElement( <HTML TAG NAME> )
		- .appendChild( <ELEMENT> )
		- .setAttribute( <NAME>, <VALUE> )
		- .getAttribute( <NAME> )
		- .addEventListener( <EVENT>, <FUNCTION> )
			button.addEventListener("click", function() { alert("ANNOYING!") } );
				--> When buttom clicked, anonymous function created and added to element
					- Returns function that returns alert("ANNOYING!")
					- Does not return function when added, but does once the button is clicked AGAIN after
					- Cannot just put alert() without function()... will just call alert(), not bind it
					- Can also do:
						var f = function() { alert("ANNOYING!"); }
						button.addEventListener("click", f);
					- But, should always have a variable passed... like "e" (argument gives event that happened, can be called whatever, not just e)
						var f = function(e) { console.log( e ); }
						button.addEventListener( 'click', f );
					- variable "this" will be the thing that the event was done do (ex. the button)
						- "the calling object in respect to event listeners"
